
dist: bionic
os: linux
language: cpp

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - cmake
    - cmake-data
    - gdb
jobs:
    include:
        - name: Linux (gcc-8)
          os: linux
          dist: bionic
          addons:
            apt:
                sources:
                   - ubuntu-toolchain-r-test
                packages:
                   - g++-8
          env:
              - CXX=g++-8
              - EXTRA_LDFLAGS="-fuse-ld=gold"
        - name: Linux (clang)
          os: linux
          dist: bionic
          env:
              - CXX=clang++
        - name: Linux (scan-build)
          os: linux
          dist: bionic
          env:
              - CXX=/usr/local/clang/libexec/c++-analyzer
              - EXTRA="scan-build"
        - name: Linux (cppcheck)
          os: linux
          dist: bionic
          env:
              - CHECK="cppcheck"
        - name: macOS (xcode)
          os: osx
        - name: macOS (xcode 10.1/clang-10)
          os: osx
          osx_image: xcode10.1
before_install:
  - cmake --version
before_script:
  # First build external lib
  - if [ "$TRAVIS_OSX_IMAGE" == "xcode10.1" ]; then brew reinstall openssl; fi
script:
  # Now build cndsrdr test
  - echo $CXX
  - $C --version
  - ${EXTRA} cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ${CMAKE_OPTS} .
  - if [ "$CHECK" == "cppcheck" ]; then cppcheck --project=compile_commands.json --quiet; fi
  - ${EXTRA} make
  - ulimit -c unlimited -S
  - ./picoquic_ct -n -r && CDNSRESULT=$?
  - if [[ ${CDNSRESULT} == 0 ]]; then exit 0; fi;
  - exit 1






sudo: false
language: cpp
addons:
  apt:
    packages:
      - valgrind
      - lcov
      - doxygen
      - graphviz
matrix:
  include:
    - os: linux
      compiler: gcc
      env: VALGRIND=true  ANALYSIS=true  COVERAGE=true  DOXYGEN=true
    - os: linux
      compiler: clang
      env: VALGRIND=true  ANALYSIS=false COVERAGE=false DOXYGEN=false
    - os: osx
      compiler: gcc
      env: VALGRIND=false ANALYSIS=false COVERAGE=false DOXYGEN=false
    - os: osx
      compiler: clang
      env: VALGRIND=false ANALYSIS=false COVERAGE=false DOXYGEN=false
script:
  - |
      if [ ! -z "$encrypted_e845a59f36e1_key" -a ! -z "$encrypted_e845a59f36e1_iv" ] && $COVERAGE ; then
        CXXFLAGS="-Wall -Wextra -Wpedantic -Werror -g -fprofile-arcs -ftest-coverage -O0" \
          CFLAGS="-Wall -Wextra -Wpedantic -Werror -g -fprofile-arcs -ftest-coverage -O0" \
         LDFLAGS="-lgcov --coverage" cmake .
      elif $VALGRIND ; then
        CXXFLAGS="-Wall -Wextra -Wpedantic -Werror -g" \
          CFLAGS="-Wall -Wextra -Wpedantic -Werror -g" cmake .
      else
        CXXFLAGS="-Wall -Wextra -Wpedantic -Werror" \
          CFLAGS="-Wall -Wextra -Wpedantic -Werror" cmake .
      fi
  - make -j 4
  - ./cdnstest
